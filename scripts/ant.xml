<?xml version="1.0" encoding="UTF-8"?>
<project name="ProcessIg">
  <property name="folder.input" value="input"/>
  <target name="onLoad.findSpreadsheets">
    <!-- Look in all input folders that might contain spreadsheets and capture the list of spreadsheet XML files as a property -->
    <fileset id="spreadsheet.contents.id" dir="${ig.root}">
      <include name="${folder.input}/examples/*spreadsheet.xml"/>
      <include name="${folder.input}/extensions/*spreadsheet.xml"/>
      <include name="${folder.input}/models/*spreadsheet.xml"/>
      <include name="${folder.input}/profiles/*spreadsheet.xml"/>
      <include name="${folder.input}/resources/*spreadsheet.xml"/>
      <include name="${folder.input}/structures/*spreadsheet.xml"/>
      <include name="${folder.input}/vocabulary/*spreadsheet.xml"/>
    </fileset>
    <property name="prop.spreadsheet.contents" refid="spreadsheet.contents.id"/>
  </target>
  <target name="onLoad.updateIg" depends="onLoad.findSpreadsheets">
    <!-- Supplement the IG file with various standard configuration files, as well as with a list of any found spreadsheets (if they're not already enumerated) -->
    <xslt in="${onLoad.ig.source}xml" out="${onLoad.ig.dest}xml" style="${ig.scripts}/onLoad.xslt">
      <param name="spreadsheetList" expression="${prop.spreadsheet.contents}"/>
    </xslt>
  </target>
  <target name="onLoad" depends="onLoad.updateIg">
    <concat destfile="${ig.template}/onLoad-validation.json" encoding="UTF-8" outputencoding="UTF-8">
      <header>{"resourceType":"OperationOutcome","issue":[</header>
      <footer>]}</footer>
      <fileset dir="${ig.template}" includes="onLoad-validation*.json"/>
    </concat>
  </target>
  <macrodef name="getSchemas">
    <attribute name="version"/>
    <attribute name="url"/>
    <sequential>
      <mkdir dir="${dir.schemas}/@{version}"/>
      <get src="@{url}fhir-single.xsd" dest="${dir.schemas}/@{version}" usetimestamp="true" ignoreerrors="true"/>
      <get src="@{url}fhir-xhtml.xsd" dest="${dir.schemas}/@{version}" usetimestamp="true" ignoreerrors="true"/>
      <get src="@{url}xml.xsd" dest="${dir.schemas}/@{version}" usetimestamp="true" ignoreerrors="true"/>
      <get src="@{url}xmldsig-core-schema.xsd" dest="${dir.schemas}/@{version}" usetimestamp="true" ignoreerrors="true"/>
    </sequential>
  </macrodef>
  <target name="onGenerate.checkVersions">
    <xslt in="${onGenerate.ig.source}xml" out="${ig.temp}/versions.txt" style="${ig.scripts}/onGenerate.getVersions.xslt"/>
    <loadproperties srcfile="${ig.temp}/versions.txt"/>
    <condition property="dir.schemas" value="${ig.root}/../schemas" else="${ig.root}/input-cache/schemas">
      <available file="${ig.root}/../schemas" type="dir"/>
    </condition>
    <mkdir dir="${dir.schemas}"/>
  </target>
  <target name="onGenerate.r5-schemas" depends="onGenerate.checkVersions" if="R5">
    <getSchemas version="R5" url="http://build.fhir.org/"/>
  </target>
  <target name="onGenerate.r4-schemas" depends="onGenerate.checkVersions" if="R4">
    <getSchemas version="R4" url="http://hl7.org/fhir/R4/"/>
  </target>
  <target name="onGenerate.r3-schemas" depends="onGenerate.checkVersions" if="R3">
    <getSchemas version="R3" url="http://hl7.org/fhir/STU3/"/>
  </target>
  <target name="onGenerate.r2b-schemas" depends="onGenerate.checkVersions" if="R2B">
    <getSchemas version="R2B" url="http://hl7.org/fhir/2016May/"/>
  </target>
  <target name="onGenerate.r2-schemas" depends="onGenerate.checkVersions" if="R2">
    <getSchemas version="R2" url="http://hl7.org/fhir/DSTU2/"/>
  </target>
  <target name="onGenerate.schemas" depends="onGenerate.r5-schemas,onGenerate.r4-schemas,onGenerate.r3-schemas,onGenerate.r2b-schemas,onGenerate.r2-schemas"/>
  <target name="onGenerate.setup">
    <property name="dir.input" value="${ig.root}/${folder.input}"/>
    <property name="dir.temp.includes" value="${ig.temp}/_includes" relative="yes"/>
    <property name="dir.template.includes" value="${ig.template}/includes" relative="yes"/>
    <loadfile property="groupings" srcFile="${ig.scripts}/groupings.txt" encoding="UTF-8"/>
  </target>
  <target name="onGenerate.infoFile" depends="onGenerate.setup">
    <xslt in="${onGenerate.ig.source}xml" out="${ig.temp}/_data/info.json" style="${ig.scripts}/onGenerate.getProperties.xslt"/>
  </target>
  <target name="onGenerate.processIg">
    <xslt in="${onGenerate.ig.source}xml" out="${onGenerate.ig.source}1.xml" style="${ig.scripts}/onGenerate.group.xslt"/>
    <replace file="${onGenerate.ig.source}1.xml" token="&lt;!--TEMPLATE_GROUPS_HERE--&gt;" value="${groupings}"/>
    <xslt in="${onGenerate.ig.source}1.xml" out="${onGenerate.ig.dest}xml" style="${ig.scripts}/onGenerate.final.xslt"/>
  </target>
  <target name="onGenerate.igQa" depends="onGenerate.processIg">
    <xslt in="${onGenerate.ig.dest}xml" out="ongenerate-validation-igqa.json" style="${ig.scripts}/onGenerate.qa.xslt"/>
  </target>
  <target name="onGenerate.processIncludes" depends="onGenerate.setup">
    <copy todir="${dir.temp.includes}">
      <fileset dir="${dir.template.includes}" includes="*"/>
    </copy>
<!--    <xslt useImplicitFileset="false" failOnNoResources="false" destdir="${dir.temp.includes}" extension=".xml" style="${ig.scripts}/processPages.xslt">
      <fileset erroronmissingdir="false" includes="*.xml" dir="${dir.input}/includes"/>
      <fileset erroronmissingdir="false" includes="*.xml" dir="${dir.input}/pagecontent"/>
      <fileset erroronmissingdir="false" includes="*.xml" dir="${dir.input}/pages"/>
    </xslt>-->
  </target>
  <target name="onGenerate.artifactList" depends="onGenerate.processIg,onGenerate.setup">
    <xslt in="${onGenerate.ig.dest}xml" out="${dir.temp.includes}/artifacts.xml" style="${ig.scripts}/createArtifactSummary.xslt"/>
  </target>
  <target name="onGenerate" depends="onGenerate.schemas,onGenerate.infoFile,onGenerate.processIncludes,onGenerate.artifactList,onGenerate.igQa">
    <fileset id="onGenerate.files.id" dir="${ig.root}">
      <include name="${dir.temp.includes}/artifacts.xml"/>
    </fileset>
    <property name="onGenerate.files" refid="onGenerate.files.id"/>
    <concat destfile="${ig.template}/onGenerate-validation.json" encoding="UTF-8" outputencoding="UTF-8">
      <header>{"resourceType":"OperationOutcome","issue":[</header>
      <footer>]}</footer>
      <fileset dir="${ig.template}" includes="ongenerate-validation*.json"/>
    </concat>
  </target>
</project>
